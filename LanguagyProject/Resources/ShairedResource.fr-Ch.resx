<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="About-Us" xml:space="preserve">
    <value>关于我们</value>
  </data>
  <data name="AboutCO2CCoin" xml:space="preserve">
    <value>关于CO2C币</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>地址</value>
  </data>
  <data name="Artificialbasedontheneuralnetwork,theCo2oassistantwillinstantlyanalyzeuserdatause." xml:space="preserve">
    <value>基于人工神经网络，Co2o 助手将即时分析用户数据使用情况。</value>
  </data>
  <data name="Artificialbasedontheneuralnetwork,theNRMassistantwillinstantlyanalyzeuserdatause." xml:space="preserve">
    <value>基于人工神经网络，NRM 助手将即时分析用户数据使用情况。</value>
  </data>
  <data name="Asked" xml:space="preserve">
    <value>问</value>
  </data>
  <data name="BestFeatures" xml:space="preserve">
    <value>最好的功能</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>经过</value>
  </data>
  <data name="CallUs" xml:space="preserve">
    <value>致电我们</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>联系我们</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>版权</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>已创建</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>天</value>
  </data>
  <data name="Duetotheuseoflargecomputingpowerandartificialbasedontheneuralnetwork,theNRMassistantwillinstantlyanalyzeuserdataand offersolutionsfortheirfurtheruse." xml:space="preserve">
    <value>由于使用了强大的计算能力和基于神经网络的人工，NRM 助手将即时分析用户数据并提供解决方案供他们进一步使用。</value>
  </data>
  <data name="DuetotheuseoflargecomputingpowerisassistantwillinstantlyanalyzeuserdataoffersolutionsfortheirfurtheruseoremIpsumhasbeentheindustry'sst" xml:space="preserve">
    <value>由于使用了超大的计算能力，助手会即时分析用户数据，为他们的进一步使用提供解决方案，orem Ipsum一直是业界领先的</value>
  </data>
  <data name="E-mail" xml:space="preserve">
    <value>电子邮件</value>
  </data>
  <data name="EIBTEK" xml:space="preserve">
    <value>EIBTEK</value>
  </data>
  <data name="Endin" xml:space="preserve">
    <value>结束于</value>
  </data>
  <data name="EnterYourEmailAddress" xml:space="preserve">
    <value>输入你的电子邮箱地址</value>
  </data>
  <data name="Faq" xml:space="preserve">
    <value>常问问题</value>
  </data>
  <data name="Features" xml:space="preserve">
    <value>特征</value>
  </data>
  <data name="Frequently" xml:space="preserve">
    <value>频繁地</value>
  </data>
  <data name="FrequentlyAskedQuestions" xml:space="preserve">
    <value>經常問的問題</value>
  </data>
  <data name="Getintouchwithus" xml:space="preserve">
    <value>请与我们联系</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>家</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>小时</value>
  </data>
  <data name="HowItWorks" xml:space="preserve">
    <value>这个怎么运作</value>
  </data>
  <data name="King" xml:space="preserve">
    <value>国王</value>
  </data>
  <data name="Meet" xml:space="preserve">
    <value>见面</value>
    <comment>``</comment>
  </data>
  <data name="Melbourne" xml:space="preserve">
    <value>墨尔本</value>
  </data>
  <data name="Member" xml:space="preserve">
    <value>成员</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>信息</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>分钟</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>姓名</value>
  </data>
  <data name="Our" xml:space="preserve">
    <value>我们的</value>
  </data>
  <data name="Partners" xml:space="preserve">
    <value>夥伴</value>
  </data>
  <data name="Questions" xml:space="preserve">
    <value>问题</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>发送</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>街道</value>
  </data>
  <data name="Subscribe" xml:space="preserve">
    <value>订阅</value>
  </data>
  <data name="SubscribeForTokenSaleUpdate" xml:space="preserve">
    <value>订阅代币销售更新</value>
  </data>
  <data name="Supported" xml:space="preserve">
    <value>支持的</value>
  </data>
  <data name="Team" xml:space="preserve">
    <value>团队</value>
  </data>
  <data name="TeamLeader" xml:space="preserve">
    <value>队长</value>
  </data>
  <data name="Victoria" xml:space="preserve">
    <value>维多利亚</value>
  </data>
  <data name="Welcometothe" xml:space="preserve">
    <value>欢迎来到</value>
  </data>
  <data name="Your" xml:space="preserve">
    <value>您的</value>
  </data>
</root>